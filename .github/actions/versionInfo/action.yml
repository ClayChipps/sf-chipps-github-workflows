name: version-info
description: gets information about a npm tag or version

inputs:
  version:
    required: true
    description: an npm version number (like 7.180.8) or an npm tag like latest/latest-rc
outputs:
  version:
    value: ${{ steps.regex-version.outputs.group1 }}
    description: guaranteed to be an npm number, even if a tag was passed in
  url:
    value: ${{ steps.versionCurl.outputs.url || steps.rcCurl.outputs.url }}
    description: url where the xz tarball for this version can be downloaded
  sha:
    description: short sha for the matching version
    value: ${{ steps.regex-sha.outputs.group1 }}

runs:
  using: composite
  steps:
    - id: isNumericalVersion
      uses: actions-ecosystem/action-regex-match@9e6c4fb3d5e898f505be7a1fb6e7b0a278f6665b
      with:
        text: ${{ inputs.version }}
        regex: '(\d+\.\d+\.\d+)'
        flags: g

    # Limitation: versions file will contain the last 20 releases and NOT rc until it's promoted to latest
    - id: versionCurl
      if: ${{ steps.isNumericalVersion.outputs.match }}
      name: Get url for version
      run: echo "::set-output name=url::$(curl -s 'https://developer.salesforce.com/media/salesforce-cli/sfdx/versions/sfdx-linux-x64-tar-xz.json' | jq -r '.[\"${{ inputs.version }}\"]')"
      shell: bash

    - id: rcCurl
      if: ${{ !steps.isNumericalVersion.outputs.match }}
      name: Get url for latest-rc
      run: echo "::set-output name=url::$(curl -s 'https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable-rc/sfdx-linux-x64-buildmanifest' | jq -r '.xz')"
      shell: bash

    - id: regex-version
      uses: actions-ecosystem/action-regex-match@9e6c4fb3d5e898f505be7a1fb6e7b0a278f6665b
      with:
        text: ${{ steps.versionCurl.outputs.url || steps.rcCurl.outputs.url }}
        regex: '(\d+\.\d+\.\d+)'
        flags: g

    - run: echo "regex found version ${{steps.regex.outputs.group1}}"
      shell: bash

    - id: regex-sha
      uses: actions-ecosystem/action-regex-match@9e6c4fb3d5e898f505be7a1fb6e7b0a278f6665b
      with:
        text: ${{ steps.versionCurl.outputs.url || steps.rcCurl.outputs.url }}
        regex: '(?<=\d+\.\d+\.\d+\/)(.+)(?=\/)'
        flags: g

    - run: echo "regex found sha ${{steps.regex-sha.outputs.group1}}"
      shell: bash
